name: Build Debug

on:
  workflow_dispatch:

jobs:
  go-lib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: 1.19.1
          cache-dependency-path: ${{ github.workspace }}/tts-server-lib

      - name: Build tts-server-lib
        run: |
          cd $GITHUB_WORKSPACE/.github/scripts
          chmod +x *.sh
          ./build_gojni.sh

      - uses: actions/upload-artifact@v4
        with:
          name: tts-server-lib
          path: lib-gojni/libs/*.aar

  build:
    needs: go-lib
    runs-on: ubuntu-latest
    env:
      outputs_dir: "${{ github.workspace }}/app/build/outputs"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
            name: tts-server-lib
            path: ${{ github.workspace }}/lib-gojni/libs

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Init Signature
        run: |
          touch local.properties
          echo ALIAS_NAME='${{ secrets.ALIAS_NAME }}' >> local.properties
          echo ALIAS_PASSWORD='${{ secrets.ALIAS_PASSWORD }}' >> local.properties
          echo KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}' >> local.properties
          echo KEY_PATH='./key.jks' >> local.properties
          # 从Secrets读取无换行符Base64解码, 然后保存到到app/key.jks
          echo ${{ secrets.KEY_STORE }} | base64 --decode > $GITHUB_WORKSPACE/app/key.jks

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew assembleAppDebug --build-cache --parallel --daemon --warning-mode all

      - name: Upload APK To Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "TTS-Server_debug"
          path: ${{env.outputs_dir}}/apk/app/debug/*debug.apk
